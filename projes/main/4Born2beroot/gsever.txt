born2beroot --> gsever

diskimizi 30,80G

root: anan --> Gorkem.sever.42
gsever: anan --> Gorkem.sever.42


Gorkem.sever.42 --> degistirilmis sifre son adimlar


su				--> su yazarak root hesabina giris yap
apt install sudo		--> sudo paketini yukleyerek root hesabinda olmadan root yetkisiyle komut calistirmak icin
sudo apt update		--> butun paket listelerini guncelle
sudo apt install vim	--> vim'i kur kolaylik olur
sudo visudo -f /etc/sudoers.d/newsudorule
	Defaults	passwd_tries=3
	Defaults	badpass_message="Lanet olasi fok baliklari cok yalniz adamim, yanlis sifre!"
	Defaults	logfile="/var/log/sudo/sudolog"
	Defaults	log_input,log_output
	Defaults	iolog_dir="/var/log/sudo"
	Defaults	requiretty
	Defaults	secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"
sudo apt install openssh-server
sudo vim /etc/ssh/sshd_config
	15- #Port 22 --> Port 4242
	34- #PermitRootLogin prohibrit-password --> PermitRootLogin no
sudo poweroff
	ssh gsever@127.0.0.1 -p 4242
		SSH	TCP	127.0.0.1	4242	|10.0.2.15|	4242
		HTTP	TCP	127.0.0.1	80	|10.0.2.15|	80
		FTP	TCP	127.0.0.1	21	|10.0.2.15|	21
sudo adduser gsever sudo				|calismazsa silin burayi(127.0.0.1 yazan yeri)|
sudo apt install ufw
sudo ufw enable
sudo ufw allow 4242
sudo vim /etc/login.defs
	160- PASS_MAX_DAYS 99999 --> PASS_MAX_DAYS 30
	160- PASS_MIN_DAYS 0	--> PASS_MIN_DAYS 2
sudo apt install libpam-pwquality
sudo vim /etc/pam.d/common-password
	25- password	requisite			pam_pwquality.so retry=3 minlen=10 ucredit=-1 dcredit=-1 maxrepeat=3 reject_username difok=7 enforce_for_root
sudo addgroup user42
sudo adduser gsever user42
sudo crontab -u root -e
	min0-59 hour0-23 ayin_gunu0-31 yilin_ayi1-12orJan-Dec haftanin_gunu0-6orMon-Sun
	*/10 * * * * bash /usr/local/bin/monitoring.sh
		{
#!/bin/bash
arc=$(uname -a)
pcpu=$(grep "physical id" /proc/cpuinfo | sort | uniq | wc -l)
vcpu=$(grep "^processor" /proc/cpuinfo | wc -l)
fram=$(free -m | awk '$1 == "Mem:" {print $2}')
uram=$(free -m | awk '$1 == "Mem:" {print $3}')
pram=$(free | awk '$1 == "Mem:" {printf("%.2f", $3/$2*100)}')
fdisk=$(df -Bg | grep '^/dev/' | grep -v '/boot$' | awk '{totaldisk += $2} END {print totaldisk}')
udisk=$(df -Bm | grep '^/dev/' | grep -v '/boot$' | awk '{useddisk += $3} END {print useddisk}')
pdisk=$(df -Bm | grep '^/dev/' | grep -v '/boot$' | awk '{useddisk += $3} {totaldisk += $2} END {printf("%d"), useddisk/totaldisk*100}')
cpul=$(top -bn1 | grep '^%Cpu' | cut -c 9- | xargs | awk '{printf("%.1f%%"), $1 + $3}')
lb=$(uptime -s | cut -c -16)
lvmt=$(lsblk | grep "lvm" | wc -l)
lvmu=$(if [ $lvmt -eq 0 ]; then echo no; else echo yes; fi)
#You need to install net tools for the next step [$ sudo apt install net-tools]
ctcp=$(cat /proc/net/sockstat{,6} | awk '$1 == "TCP:" {print $3}')
ulog=$(users | wc -w)
ip=$(hostname -I)
mac=$(ip link show | awk '$1 == "link/ether" {print $2}')
cmds=$(journalctl _COMM=sudo | grep COMMAND | wc -l) # journalctl should be running as sudo but our script is running as root so we don't need in sudo here
wall "	#Architecture: $arc
	#CPU physical: $pcpu
	#vCPU: $vcpu
	#Memory Usage: $uram/${fram}MB ($pram%)
	#Disk Usage: $udisk/${fdisk}Gb ($pdisk%)
	#CPU load: $cpul
	#Last boot: $lb
	#LVM use: $lvmu
	#Connexions TCP: $ctcp ESTABLISHED
	#User log: $ulog
	#Network: IP $ip ($mac)
	#Sudo: $cmds cmd" # broadcast our system information on all terminals
		}
chmod -x monitoring.sh
sudo reboot
----------------------- BONUS PART ----------------------------------------------------
sudo apt install lighttpd -y
sudo apt install mariadb-server -y
sudo ufw allow 80
sudo ufw status --> kontrol et 80 portu geldi mi
sudo mysql_secure_installation
	root sifreni gir --> anan
	unix_socket			= n
	root_password		= n
	remove anonymous users	= y
	root_login_remotely	= y
	database_acces		= y
	privilege_tables		= y
sudo mariadb
CREATE DATABASE bonus;
GRANT ALL ON bonus.* TO 'bonususer'@'localhost' IDENTIFIED BY 'bonuspassword' WITH GRANT OPTION;
FLUSH PRIVILEGES;
exit
mariadb -u bonususer -p
	bonuspassword
show databases; --> bonus yaziyor mu kontrol et
exit
sudo apt install php-cgi php-mysql -y
sudo apt install wget
cd /var/www/html
sudo wget http://wordpress.org/latest.tar.gz -P /var/www/html
sudo tar -xzvf /var/www/html/latest.tar.gz
sudo rm /var/www/html/latest.tar.gz
sudo cp -r /var/www/html/wordpress/* /var/www/html
sudo rm -rf /var/www/html/wordpress
sudo cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php
sudo vim /var/www/html/wp-config.php
	23- define( 'DB_NAME', 'bonus' );
	26- define( 'DB_USER', 'bonususer' );
	29- define( 'DB_PASSWORD', 'bonuspassword' );
sudo lighty-enable-mod fastcgi
sudo lighty-enable-mod fastcgi-php
sudo service lighttpd force-reload
sudo ufw allow 21
sudo apt install vsftpd
sudo vim /etc/vsftpd.conf
	31-	#write_enable=yes --> write_enable=yes
	152-	user_sub_token=$USER
	153-	local_root=/home/$USER/ftp
	154-	userlist_enable=YES
	155-	userlist_file=/etc/vsftpd/userlist
	156-	userlist_deny=NO
sudo mkdir /home/gsever/ftp
sudo mkdir /home/gsever/ftp/files
sudo chown nobody:nogroup /home/gsever/ftp
sudo chmod a-w /home/gsever/ftp
sudo vim /etc/vsftpd.userlist
echo gsever | sudo tee -a /etc/vsftpd.userlist
sudo reboot --> bitti simdi wordpress sitesinden hesap olusturman gerekiyor.
internet tarayicisini ac -> 127.0.0.1 yaz enterle
kullanici olustur sonra 127.0.0.1 'e girdiginde websiten gelmesi gerek.



==========================EVALUATION KONTROL ADIMLARI======================



	born2beroot EVALUATIONS adımları


# General !nstruct!ons (Genel Tal!matlar)
	>> G!t reposundan çek!len s!gnature.txt !le “shasum born2beroot.vd!”
çıktı değerler! eşleş!yor mu? 					--> Evet eslesiyor.


# Mandatory part (Zorunlu Kısım)
	>> B!r sanal mak!ne nasıl çalışır?			--> Fiziksel bilgisayarda calisiyormus gibi gostererek yazilimda calismasini sagliyoruz. Birnevi simule ediyoruz.
	>> Sanal mak!nen!n amacı ned!r?				--> Kullaniciya isletim sistemi icinde bir isletim sistemi kullanabilmesini saglamak.
	>> Neden .... !şlet!m s!stem! terc!h ed!ld!?		--> Debian daha kullanici dostu ve kullanimi/kurulmasi daha kolay.
	>> CentOS ve Deb!an arasındak! temel farklar nelerd!r?	--> 
		>> Deb!an terc!h ed!ld!yse;
			> apt!tude ve apt arasındak! fark ned!r?	--> Aptitude ust duzey paket yoneticisi, APT ise diger kullanicilar tarafindan kullanilabilen paket yoneticisi.
			> APPArmor ned!r?					--> AppArmor(uygulama zirhi) sistem yoneticisinin uygulamalari kisitlamasina izin veren Linux cekirdek guvenlik modulu.
	>> !!! Scr!pt(makro) 10dk b!r çıktı ver!yor mu kontrol ed!l!r, verm!yorsa
burada durulur.					--> Evet veriyor. -> bash /usr/local/bin/monitoring.sh


# S!mple setup (Bas!t Kurulum)
	>> Mak!ne graf!k ortamına sah!p m! kontrol et eğerk! graf!k ortamı yoksa
devam.			--> Evet sahip.
	>> Mak!neye bağlanmadan önce parola !sten!yor mu? İsten!yorsa devam. --> Evet isteniyor.
	>> Sunucuya bağlantı kurma (Öncel!kle root kullanıcısı olarak deney!n,
eğerk! root !le bağlanılıyorsa burada durulur.) (G!r!len ş!fre protokollere uyuyor mu kontrol et, uymuyorsa burada durulur. Bu kontrol g!rd!ğ! ş!frey! söylemes! gerekt!ğ! anlamına gel!yor. Kontrol ed!len şeyler !se küçük/büyük
harf ve uzunluk kuralları vs.)
	>> UFW h!zmet! başlatıldı mı kontrol ed!ls!n.		--> sudo service ufw status -> sudo ufw status
	>> SSH h!zmet! başlatıldı mı kontrol ed!ls!n.		--> sudo service ssh status -> sudo systemctl status ssh
	>> İşlet!m s!stem!n!n Deb!an mı CentOS mu kontrol ed!ls!n.	--> hostnamectl
	>> !!! Doğru çalışmayan b!rşeyler varsa ve açıklamalar net değ!lse	burada durulur. --> Evet dogru.



# User (kullanıcı)
	>> Öğrenc!n!n oturum açma b!lg!ler!ne(kısaca !ntrada kullanılan !d) sah!p b!r kullanıcı sanal mak!nede var mı kontrol ed!ls!n.				--> hostnamectl
	>> Bu kullanıcı “sudo” ve “user42” gruplarına dah!l ed!lm!ş m! kontrol ed!ls!n. --> getent group sudo -> getent group user42
	>> Kullanıcı ş!fres! pol!t!kaları yapılmış mı kontrol ed!ls!n. --> 
>> Yen! b!r kullanıcı oluşturulsun ve kurallara/pol!t!kalara uygun ş!fre
atansın.
>> Bu kuralların nasıl ayarlandığı açıklanmalıdır.

 >> Herhang! b!r problem yok !se “evaluat!ng” grubu oluşturulsun.
>> Oluşturulan yen! kullanıcı yen! gruba atansın.
>> Atanan kullanıcı, grupta mı kontrol ed!ls!n.
>> !!! Bu ş!fre pol!t!kasının ve uygulanmasının avantaj ve dezavantajları
açıklanmalıdır.
>> !!! Açıklamalar net değ!lse burada durulur.
# Hostname and part!t!ons (Ana b!lg!sayar adı ve bölümler)
>> Mak!nen!n ana b!lg!sayar adının doğru b!ç!mde oluşturuldu mu kontrol
ed!ls!n (log!n42)(log!n’den kastı !ntra !d’s!)
>> Ana b!lg!sayarın adı değ!şt!r!ls!n ve mak!ne yen!den başlatılsın. Ad
güncellenmed!yse burada durulur.
>> Orj!nal mak!ne !sm!ne artık dönüneb!l!n!r.
>> Sanal mak!ne bölümler! nasıl görüntülen!r?
>> Çıktı Subject’tek! örneğe göre değerlend!r. (Bonus çıktısına göre
yaptıysa bonus puanı ver!lecekt!r.)
>> LVM nasıl çalışıyor??(Kısaca)
>> LVM neyle !lg!l!d!r?? (Kısaca)
>> !!! Doğru çalışmayan b!rşeyler varsa ve açıklamalar net değ!lse
burada durulur.
# Sudo
>> Sudo kurulumu kontrol ed!ls!n.
>> Yen! oluşturulan kullanıcı sudo grubuna atanmalıdır ve atandığı
göster!lmel!d!r.
>> Sudo’nun değer!n! ve !şley!ş! açıklanmalıdır. (Subjecttek! sudo !le !lg!l!
olan kurallar)
>> Subject’tek! sudo !ç!n uygulanan kurallar/pol!t!kaların uygulanması
göster!lmel!d!r.
>> “/var/log/sudo/“ klasörünün varlığı kontrol ed!l!r ve !çer!s!nde en az
b!r dosya var mı kontrol ed!l!r. Bu dosyanın !çer!ğ! kontrol ed!l!r.
>> Sudo üzer!nde b!r komut çalıştırmayı deney!n. “/var/log/sudo/“
!çer!s!ndek! dosyalarda güncelleme gerçekleşt! m! kontrol ed!n.
>> !!! Doğru çalışmayan b!rşeyler varsa ve açıklamalar net değ!lse
burada durulur.
# UFW
>> UFW sanal mak!neye düzgün b!r şek!lde kuruldu mu kontrol ed!l!r.
>> UFW düzgün çalışıyor mu kontrol ed!l!r.
>> UFW’n!n ned!r? ve kullanmanın değer! ned!r?
>> UFW’dek! akt!f kuralları l!steley!n. 4242 numaralrı b!r bağlantı noktası
!ç!n kural bulunmalıdır.
>> 8080 numaralı bağlantı noktası açmak !ç!n kural ekley!n. Etk!n

 kuralları l!steleyerek eklen!p eklenmed!ğ! kontrol ed!l!r.
>> Yen! eklenen kural s!l!nmel!d!r.
>> !!! Doğru çalışmayan b!rşeyler varsa ve açıklamalar net değ!lse
burada durulur.
# SSH
>> SSH h!zmet!n!n sanal mak!neye düzgün b!r şek!lde kurulu mu kontrol
ed!ls!n.
>> SSH h!zmet! düzgün çalışıyor mu kontrol ed!ls!n.
>> SSH ned!r? ve kullanmanın değer! ned!r?
>> SSH h!zmet!n!n yalnızca 4242 portu üzer!nden kullanıldığını
doğrulayın.
>> Yen! oluşturulan kullanıcı ssh üzer!nden oturum açab!lmel!d!r. >> !!! Doğru çalışmayan b!rşeyler varsa ve açıklamalar net değ!lse
burada durulur.
# Scr!pt mon!tor!ng (Komut dosyası !zleme)
>> Kodu göstererek hang! seneryoların nasıl çalıştığı anlatılmalıdır. >> Cron ned!r?
>> Her 10dk b!r çalışacak komutun nasıl kurulduğu.
>> Komut dosyasının doğru çalıştığı doğrulandıktan sonra bu komut
dosyası her 1 dk b!r çalışması sağlanmalıdır.
>> Komut dosyası değ!şt!r!lmeden, komut dosyasının çalışması
durdurulmalıdır.
>> Bu noktayı kontrol etmek !ç!n sunucuyu son b!r kez yen!den
başlatmanız gerekecek. Başlangıçta, komut dosyasının hala aynı yerde bulunduğunu, haklarının değ!şmed!ğ!n! ve değ!şt!r!lmed!ğ!n! kontrol etmek gerekecekt!r.
>> !!! Doğru çalışmayan b!rşeyler varsa ve açıklamalar net değ!lse burada durulur.
## BONUS
>> Bonus kısmını, ancak ve ancak zorunlu kısım tamamen ve mükemmel
b!r şek!lde yapılmışsa ve hata yönet!m! beklenmed!k veya kötü kullanımı ele alıyorsa değerlend!r!n. Savunma sırasında tüm zorunlu puanların geç!lmemes! durumunda bonus puanlar tamamen göz ardı ed!lmel!d!r.
>BONUS
# Değerlend!r!len konunun ve öğrenc!n!n yardımıyla bu proje !ç!n
yetk!lend!r!len bonus puanlarını kontrol ed!n:
- Bölümler! kurmak 2 puan değer!nded!r.
- Sadece konunun gerekt!rd!ğ! h!zmetlerle WordPress kurmak 2 puan değer!nded!r.
- Serbest seç!m h!zmet! 1 puan değer!nded!r. Her b!r ekstra

 h!zmet!n düzgün çalıştığını ve uygulandığını doğrulayın ve test ed!n. Ücrets!z seç!m h!zmet! !ç!n, değerlend!r!len öğrenc!n!n s!ze nasıl çalıştığı ve neden yararlı olduğunu düşündükler! hakkında bas!t b!r açıklama yapması gerek!r. Lütfen NGINX ve Apache2'n!n yasak olduğunu unutmayın.












==========================================================================
born2berootdeneme --> gsever sudo sifresi anan

her sifre anan sanirim
