# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefile                                           :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: gsever <gsever@student.42kocaeli.com.tr    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/06/09 20:22:17 by gsever            #+#    #+#              #
#    Updated: 2022/06/21 22:55:50 by gsever           ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME		:= push_swap
CHECKER		:= checker

#	Flags for compile
CC			:= gcc
FLAGS		:= -Wall -Werror -Wextra 
INCLUDES	:= -I$(HEADERS_DIRECTORY) -I$(LIBFTDIR)/includes/
LIBRARIES	:= -L$(LIBFTDIR)/ -lft

#	Libft Part --> OK
LIBFTDIR	:= ./libs/libft

#	HEADERS Parts --> Kutuphane --> OK
HEADERS_LIST = \
	push_swap.h
HEADERS_DIRECTORY = ./include/
HEADERS = $(addprefix $(HEADERS_DIRECTORY), $(HEADERS_LIST))

#	Source Files --> OK
SOURCES_DIRECTORY = ./sources/
SOURCES_LIST = \
	push_swap.c push_swap_utils.c input.c input_utils.c \
	 operation_push.c operation_rotate.c operation_rotate_reverse.c \
	 operation_swap.c stack_get.c stack_is.c \
	 stack_rotation_count.c stack_rotation_case_choose.c \
	 stack_rotation_case_set.c stack_rotation_set.c \
	 stack_snake.c stack_sort_big.c stack_sort_execute.c \
	 stack_sort_small.c stack_utils.c
SOURCES = $(addprefix $(SOURCES_DIRECTORY), $(SOURCES_LIST))

#	Checker Files --> OK
CHECKER_DIRECTORY = ./sources/
CHECKER_LIST = \
	checker.c input.c input_utils.c push_swap_utils.c stack_utils.c \
	operation_push.c operation_rotate.c operation_rotate_reverse.c \
	operation_swap.c
CHECKER_SOURCES = $(addprefix $(SOURCES_DIRECTORY), $(SOURCES_LIST))

#	Object Files --> (Compiled files directory) -> OK
OBJECTS_DIRECTORY = objects/
OBJECTS_LIST = $(patsubst %.c, %.o, $(SOURCES_LIST))
OBJECTS	= $(addprefix $(OBJECTS_DIRECTORY), $(OBJECTS_LIST))

#	COLORS --> ðŸŸ¥ ðŸŸ© ðŸŸ¦
LB		:= \033[0;36m
BLUE	:= \033[0;34m
YELLOW	:= \033[0;33m
GREEN	:= \033[0;32m
RED		:= \033[0;31m
RESET	:= \033[0m
X		:= \033[m

.PHONY: all libft clean fclean re

all: $(NAME)

$(NAME): libft $(OBJECTS_DIRECTORY) $(OBJECTS)
	$(CC) $(FLAGS) $(LIBRARIES) $(INCLUDES) $(OBJECTS) -o $(NAME)
	@printf "%-57b %b" "$(GREEN)CREATED $(NAME)" "$(GREEN)[FINISHED]$(X)\n"

$(OBJECTS_DIRECTORY):
	@mkdir -p $(OBJECTS_DIRECTORY)
	@echo "$(NAME): $(GREEN)$(OBJECTS_DIRECTORY) was created$(RESET)"

$(OBJECTS_DIRECTORY)%.o : $(SOURCES_DIRECTORY)%.c
	@$(CC) $(FLAGS) -c $(INCLUDES) $< -o $@
	@printf "%-57b %b" "$(BLUE)COMPILED $(LB)$@" "$(GREEN)[âœ“]$(X)\n"

#	My Library --> OK
libft:
ifneq ($(MAKECMDGOALS), $(filter $(MAKECMDGOALS), $(NAME) $(CHECKER)))
	@make -C $(LIBFTDIR) $(MAKECMDGOALS) --silent
else
	@make -C $(LIBFTDIR) --silent
endif

clean: libft
	@rm -rf $(OBJECTS_DIRECTORY)
	@echo "$(NAME): $(RED)$(OBJECTS_DIRECTORY) was deleted$(RESET)"

fclean: libft clean
	@rm -f $(NAME)
	@echo "$(NAME): $(RED)$(NAME) was deleted$(RESET)"

re:
	@$(MAKE) fclean
	@$(MAKE) all

# **************************************************************************** #
#						       CHECKER RULES        						   #
# **************************************************************************** #

# Linking
$(CHECKER): libft checker_prep $(CHECK_OBJS)
	@$(CC) $(CFLAGS) -o $(CHECKER) $(CHECK_OBJS) $(LIBRARIES)
	@printf "%-14b %-42b %b" "$(OK_COLOR)=======" "$(OK_COLOR)$(NAME)" "$(OK_COLOR)[âœ“]$(NO_COLOR)\n"

# Compiling
$(CHECK_ODIR)/%.o: $(SDIR)/%.c
	@$(CC) $(CFLAGS) $(INCLUDES) -c $< -o $@
	@printf "%-57b %b" "$(COM_COLOR)compile $(OBJ_COLOR)$@" "$(OK_COLOR)[âœ“]$(NO_COLOR)\n"

.PHONY: checker_prep
checker_prep:
	@mkdir -p $(CHECK_ODIR)
