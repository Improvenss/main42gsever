# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    Makefilegorkem                                     :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: gsever <gsever@student.42kocaeli.com.tr    +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2022/05/31 15:04:59 by gsever            #+#    #+#              #
#    Updated: 2022/06/01 18:45:58 by gsever           ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

NAME		:= fractol
CC			:= gcc

#	Flags for compile
FLAGS		:= -Wall -Werror -Wextra
LIBRARIES	:= -lmlx -lm -lft\
	-L$(LIBFT_DIRECTORY) -L$(MINILIBX_DIRECTORY)\
	-framework OpenGL -framework AppKit
INCLUDES	:= -I$(HEADERS_DIRECTORY) -I$(LIBFT_HEADERS) -I$(MINILIBX_HEADERS)

#	Libft Part --> OK
LIBFT_DIRECTORY		:= ./libraries/libft/
LIBFT_HEADERS		:= $(LIBFT_DIRECTORY)includes/
LIBFT				:= $(LIBFT_DIRECTORY)libft.a

#	Minilibx Part --> OK
MINILIBX_DIRECTORY	:= ./libraries/minilibx_opengl/
MINILIBX_HEADERS	:= $(MINILIBX_DIRECTORY)
MINILIBX			:= $(MINILIBX_DIRECTORY)libmlx.a

#	HEADERS Parts --> Kutuphane --> OK
HEADERS_DIRECTORY	:= includes/
HEADERS_LIST		:= $(wildcard $(HEADERS_DIRECTORY)*.h)

#	Source Files --> Derlenmiyor
SOURCES_DIRECTORY	:= sources/
SOURCES_LIST		:= \
			main.c\
			fractol.c\
			color.c\
			helper.c\
			utils.c \
			key_actions.c\
			mouse_actions.c \
			fractal_mandelbrot.c\
			fractal_julia.c \
			fractal_burning_ship.c\
			fractal_celtic_mandelbrot.c\
			ft_atod.c\
			ft_get_unumlen.c
#SOURCES_LIST		:= $(wildcard $(SOURCES_DIRECTORY)*.c)

#	Object Files --> (Compiled files directory)
OBJECTS_DIRECTORY	:= objects/
OBJECTS				:= $(addprefix $(OBJECTS_DIRECTORY), $(SOURCES_LIST:.c=.o))

#	COLORS --> ðŸŸ¥ ðŸŸ© ðŸŸ¦
LB		:= \033[0;36m
BLUE	:= \033[0;34m
YELLOW	:= \033[0;33m
GREEN	:= \033[0;32m
RED		:= \033[0;31m
RESET	:= \033[0m
X		:= \033[m

.PHONY: all clean fclean re

all: $(NAME)

$(NAME): $(LIBFT) $(MINILIBX) prep $(OBJECTS)
	@$(CC) $(FLAGS) $(INCLUDES) $(LIBRARIES) -o $(NAME) $(OBJECTS) 
	@printf "%-57b %b" "$(GREEN)CREATED $(NAME)" "$(GREEN)[FINISHED]$(X)\n"

prep:
	@mkdir -p $(OBJECTS_DIRECTORY)
	@echo "$(NAME): $(GREEN)$(OBJECTS_DIRECTORY) was created$(RESET)"

$(OBJECTS_DIRECTORY)%.o: $(SOURCES_DIRECTORY)%.c
	@$(CC) $(FLAGS) $(INCLUDES) -c $< -o $@
	@printf "%-57b %b" "$(BLUE)COMPILED $(LB)$@" "$(GREEN)[âœ“]$(X)\n"














$(LIBFT):
	@echo "$(NAME): $(GREEN)Creating $(LIBFT)...$(RESET)"
	@$(MAKE) -sC $(LIBFT_DIRECTORY)
	@printf "%-57b %b" "$(BLUE)COMPILED $(LIBFT)" "$(GREEN)[âœ“]$(X)\n"

$(MINILIBX):
	@echo "$(NAME): $(GREEN)Creating $(MINILIBX)...$(RESET)"
	@$(MAKE) -sC $(MINILIBX_DIRECTORY)
	@printf "%-57b %b" "$(BLUE)COMPILED $(LB)$(MINILIBX)" "$(GREEN)[MINILIBX FINISHED]$(X)\n"

clean:
	@$(MAKE) -sC $(LIBFT_DIRECTORY) clean
	@$(MAKE) -sC $(MINILIBX_DIRECTORY) clean
	@rm -rf $(OBJECTS_DIRECTORY)
	@echo "$(NAME): $(RED)$(OBJECTS_DIRECTORY) was deleted$(RESET)"

fclean: clean
	@rm -f $(LIBFT)
	@echo "$(NAME): $(RED)$(LIBFT) was deleted$(RESET)"
	@rm -f $(MINILIBX)
	@echo "$(NAME): $(RED)$(MINILIBX) was deleted$(RESET)"
	@rm -f $(NAME)
	@echo "$(NAME): $(RED)$(NAME) was deleted$(RESET)"

re:
	@$(MAKE) fclean
	@$(MAKE) all

print:
	echo $(SOURCES_LIST)